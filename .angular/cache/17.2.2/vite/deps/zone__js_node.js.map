{
  "version": 3,
  "sources": ["../../../../../node_modules/events/events.js", "browser-external:fs", "browser-external:timers", "browser-external:crypto", "../../../../../node_modules/zone.js/fesm2015/zone-node.js"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"timers\" has been externalized for browser compatibility. Cannot access \"timers.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n// Initialize global `Zone` constant.\n(function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ?\n                this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = {\n        name: 'NO ZONE'\n    };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(globalThis);\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nZone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nZone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nzoneSymbol('originalInstance');\nfunction copySymbolProperties(src, dest) {\n    if (typeof Object.getOwnPropertySymbols !== 'function') {\n        return;\n    }\n    const symbols = Object.getOwnPropertySymbols(src);\n    symbols.forEach((symbol) => {\n        const desc = Object.getOwnPropertyDescriptor(src, symbol);\n        Object.defineProperty(dest, symbol, {\n            get: function () {\n                return src[symbol];\n            },\n            set: function (value) {\n                if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                    // if src[symbol] is not writable or not have a setter, just return\n                    return;\n                }\n                src[symbol] = value;\n            },\n            enumerable: desc ? desc.enumerable : true,\n            configurable: desc ? desc.configurable : true\n        });\n    });\n}\nlet shouldCopySymbolProperties = false;\nfunction setShouldCopySymbolProperties(flag) {\n    shouldCopySymbolProperties = flag;\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n            if (shouldCopySymbolProperties) {\n                copySymbolProperties(delegate, proto[name]);\n            }\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction patchMicroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return Zone.current.scheduleMicroTask(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\n\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            if (value instanceof ZoneAwarePromise) {\n                return value;\n            }\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static withResolvers() {\n            const result = {};\n            result.promise = new ZoneAwarePromise((res, rej) => {\n                result.resolve = res;\n                result.reject = rej;\n            });\n            return result;\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\nZone.__load_patch('node_util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    setShouldCopySymbolProperties(true);\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                const signal = options && typeof options === 'object' && options.signal &&\n                    typeof options.signal === 'object' ?\n                    options.signal :\n                    undefined;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // if addEventListener with signal options, we don't pass it to\n                    // native addEventListener, instead we keep the signal setting\n                    // and handle ourselves.\n                    taskData.options.signal = undefined;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    nativeListener.call(signal, 'abort', () => {\n                        task.zone.cancelTask(task);\n                    }, { once: true });\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\n\nZone.__load_patch('EventEmitter', (global, Zone, api) => {\n    // For EventEmitter\n    const EE_ADD_LISTENER = 'addListener';\n    const EE_PREPEND_LISTENER = 'prependListener';\n    const EE_REMOVE_LISTENER = 'removeListener';\n    const EE_REMOVE_ALL_LISTENER = 'removeAllListeners';\n    const EE_LISTENERS = 'listeners';\n    const EE_ON = 'on';\n    const EE_OFF = 'off';\n    const compareTaskCallbackVsDelegate = function (task, delegate) {\n        // same callback, same capture, same event name, just return\n        return task.callback === delegate || task.callback.listener === delegate;\n    };\n    const eventNameToString = function (eventName) {\n        if (typeof eventName === 'string') {\n            return eventName;\n        }\n        if (!eventName) {\n            return '';\n        }\n        return eventName.toString().replace('(', '_').replace(')', '_');\n    };\n    function patchEventEmitterMethods(obj) {\n        const result = patchEventTarget(global, api, [obj], {\n            useG: false,\n            add: EE_ADD_LISTENER,\n            rm: EE_REMOVE_LISTENER,\n            prepend: EE_PREPEND_LISTENER,\n            rmAll: EE_REMOVE_ALL_LISTENER,\n            listeners: EE_LISTENERS,\n            chkDup: false,\n            rt: true,\n            diff: compareTaskCallbackVsDelegate,\n            eventNameToString: eventNameToString\n        });\n        if (result && result[0]) {\n            obj[EE_ON] = obj[EE_ADD_LISTENER];\n            obj[EE_OFF] = obj[EE_REMOVE_LISTENER];\n        }\n    }\n    // EventEmitter\n    let events;\n    try {\n        events = require('events');\n    }\n    catch (err) {\n    }\n    if (events && events.EventEmitter) {\n        patchEventEmitterMethods(events.EventEmitter.prototype);\n    }\n});\n\nZone.__load_patch('fs', (global, Zone, api) => {\n    let fs;\n    try {\n        fs = require('fs');\n    }\n    catch (err) {\n    }\n    if (!fs)\n        return;\n    // watch, watchFile, unwatchFile has been patched\n    // because EventEmitter has been patched\n    const TO_PATCH_MACROTASK_METHODS = [\n        'access', 'appendFile', 'chmod', 'chown', 'close', 'exists', 'fchmod',\n        'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchmod',\n        'lchown', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'read',\n        'readdir', 'readFile', 'readlink', 'realpath', 'rename', 'rmdir', 'stat',\n        'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile',\n    ];\n    TO_PATCH_MACROTASK_METHODS.filter(name => !!fs[name] && typeof fs[name] === 'function')\n        .forEach(name => {\n        patchMacroTask(fs, name, (self, args) => {\n            return {\n                name: 'fs.' + name,\n                args: args,\n                cbIdx: args.length > 0 ? args.length - 1 : -1,\n                target: self\n            };\n        });\n    });\n    const realpathOriginalDelegate = fs.realpath?.[api.symbol('OriginalDelegate')];\n    // This is the only specific method that should be additionally patched because the previous\n    // `patchMacroTask` has overridden the `realpath` function and its `native` property.\n    if (realpathOriginalDelegate?.native) {\n        fs.realpath.native = realpathOriginalDelegate.native;\n        patchMacroTask(fs.realpath, 'native', (self, args) => ({\n            args,\n            target: self,\n            cbIdx: args.length > 0 ? args.length - 1 : -1,\n            name: 'fs.realpath.native',\n        }));\n    }\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\nconst set = 'set';\nconst clear = 'clear';\nZone.__load_patch('node_timers', (global, Zone) => {\n    // Timers\n    let globalUseTimeoutFromTimer = false;\n    try {\n        const timers = require('timers');\n        let globalEqualTimersTimeout = global.setTimeout === timers.setTimeout;\n        if (!globalEqualTimersTimeout && !isMix) {\n            // 1. if isMix, then we are in mix environment such as Electron\n            // we should only patch timers.setTimeout because global.setTimeout\n            // have been patched\n            // 2. if global.setTimeout not equal timers.setTimeout, check\n            // whether global.setTimeout use timers.setTimeout or not\n            const originSetTimeout = timers.setTimeout;\n            timers.setTimeout = function () {\n                globalUseTimeoutFromTimer = true;\n                return originSetTimeout.apply(this, arguments);\n            };\n            const detectTimeout = global.setTimeout(() => { }, 100);\n            clearTimeout(detectTimeout);\n            timers.setTimeout = originSetTimeout;\n        }\n        patchTimer(timers, set, clear, 'Timeout');\n        patchTimer(timers, set, clear, 'Interval');\n        patchTimer(timers, set, clear, 'Immediate');\n    }\n    catch (error) {\n        // timers module not exists, for example, when we using nativeScript\n        // timers is not available\n    }\n    if (isMix) {\n        // if we are in mix environment, such as Electron,\n        // the global.setTimeout has already been patched,\n        // so we just patch timers.setTimeout\n        return;\n    }\n    if (!globalUseTimeoutFromTimer) {\n        // 1. global setTimeout equals timers setTimeout\n        // 2. or global don't use timers setTimeout(maybe some other library patch setTimeout)\n        // 3. or load timers module error happens, we should patch global setTimeout\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    }\n    else {\n        // global use timers setTimeout, but not equals\n        // this happens when use nodejs v0.10.x, global setTimeout will\n        // use a lazy load version of timers setTimeout\n        // we should not double patch timer's setTimeout\n        // so we only store the __symbol__ for consistency\n        global[Zone.__symbol__('setTimeout')] = global.setTimeout;\n        global[Zone.__symbol__('setInterval')] = global.setInterval;\n        global[Zone.__symbol__('setImmediate')] = global.setImmediate;\n    }\n});\n// patch process related methods\nZone.__load_patch('nextTick', () => {\n    // patch nextTick as microTask\n    patchMicroTask(process, 'nextTick', (self, args) => {\n        return {\n            name: 'process.nextTick',\n            args: args,\n            cbIdx: (args.length > 0 && typeof args[0] === 'function') ? 0 : -1,\n            target: process\n        };\n    });\n});\nZone.__load_patch('handleUnhandledPromiseRejection', (global, Zone, api) => {\n    Zone[api.symbol('unhandledPromiseRejectionHandler')] =\n        findProcessPromiseRejectionHandler('unhandledRejection');\n    Zone[api.symbol('rejectionHandledHandler')] =\n        findProcessPromiseRejectionHandler('rejectionHandled');\n    // handle unhandled promise rejection\n    function findProcessPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(process, evtName);\n            eventTasks.forEach(eventTask => {\n                // process has added unhandledrejection event listener\n                // trigger the event listener\n                if (evtName === 'unhandledRejection') {\n                    eventTask.invoke(e.rejection, e.promise);\n                }\n                else if (evtName === 'rejectionHandled') {\n                    eventTask.invoke(e.promise);\n                }\n            });\n        };\n    }\n});\n// Crypto\nZone.__load_patch('crypto', () => {\n    let crypto;\n    try {\n        crypto = require('crypto');\n    }\n    catch (err) {\n    }\n    // use the generic patchMacroTask to patch crypto\n    if (crypto) {\n        const methodNames = ['randomBytes', 'pbkdf2'];\n        methodNames.forEach(name => {\n            patchMacroTask(crypto, name, (self, args) => {\n                return {\n                    name: 'crypto.' + name,\n                    args: args,\n                    cbIdx: (args.length > 0 && typeof args[args.length - 1] === 'function') ?\n                        args.length - 1 :\n                        -1,\n                    target: crypto\n                };\n            });\n        });\n    }\n});\nZone.__load_patch('console', (global, Zone) => {\n    const consoleMethods = ['dir', 'log', 'info', 'error', 'warn', 'assert', 'debug', 'timeEnd', 'trace'];\n    consoleMethods.forEach((m) => {\n        const originalMethod = console[Zone.__symbol__(m)] = console[m];\n        if (originalMethod) {\n            console[m] = function () {\n                const args = ArraySlice.call(arguments);\n                if (Zone.current === Zone.root) {\n                    return originalMethod.apply(this, args);\n                }\n                else {\n                    return Zone.root.run(originalMethod, this, args);\n                }\n            };\n        }\n    });\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    patchQueueMicrotask(global, api);\n});\n"],
  "mappings": "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",
  "names": ["ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "once", "Zone", "self", "ObjectGetOwnPropertyDescriptor", "ObjectDefineProperty", "value", "_global", "event", "delegate", "patchOptions", "returnTarget", "window"]
}
