{"ast":null,"code":"import 'zone.js/dist/zone';\nimport { AppComponent } from './app/app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { importProvidersFrom } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideStore } from '@ngrx/store';\nimport { routes } from './app/app-routes/app-routing.module';\nif (environment.production) {\n  enableProdMode();\n}\n// avoid having application logic\n// activate first module\nbootstrapApplication(AppComponent, {\n  providers: [provideRouter(routes), importProvidersFrom(HttpClientModule, BrowserAnimationsModule), provideStore()]\n}).then(started => {\n  console.log('Start up is working', started);\n}).catch(err => {\n  console.error('error has occured on start up', err);\n});","map":{"version":3,"names":["AppComponent","BrowserAnimationsModule","HttpClientModule","bootstrapApplication","enableProdMode","environment","importProvidersFrom","provideRouter","provideStore","routes","production","providers","then","started","console","log","catch","err","error"],"sources":["/Users/chaseolsen/skalarly-MVP/skalarly/src/main.ts"],"sourcesContent":["import 'zone.js/dist/zone';\nimport { AppComponent } from './app/app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { importProvidersFrom } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { provideStore } from '@ngrx/store';\nimport { routes } from './app/app-routes/app-routing.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// avoid having application logic\n// activate first module\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideRouter(routes),\n    importProvidersFrom(HttpClientModule, BrowserAnimationsModule),\n    provideStore()\n  ]\n})\n  .then((started) => {\n    console.log('Start up is working', started);\n  })\n  .catch((err) => {\n    console.error('error has occured on start up', err);\n  });\n"],"mappings":"AAAA,OAAO,mBAAmB;AAC1B,SAASA,YAAY,QAAQ,qBAAqB;AAClD,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,mBAAmB,QAAQ,eAAe;AACnD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,MAAM,QAAQ,qCAAqC;AAE5D,IAAIJ,WAAW,CAACK,UAAU,EAAE;EAC1BN,cAAc,EAAE;;AAGlB;AACA;AACAD,oBAAoB,CAACH,YAAY,EAAE;EACjCW,SAAS,EAAE,CACTJ,aAAa,CAACE,MAAM,CAAC,EACrBH,mBAAmB,CAACJ,gBAAgB,EAAED,uBAAuB,CAAC,EAC9DO,YAAY,EAAE;CAEjB,CAAC,CACCI,IAAI,CAAEC,OAAO,IAAI;EAChBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,OAAO,CAAC;AAC7C,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAI;EACbH,OAAO,CAACI,KAAK,CAAC,+BAA+B,EAAED,GAAG,CAAC;AACrD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}