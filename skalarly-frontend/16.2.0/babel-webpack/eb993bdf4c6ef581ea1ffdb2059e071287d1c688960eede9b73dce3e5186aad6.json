{"ast":null,"code":"import _defineProperty from \"/Users/chaseolsen/skalarly-MVP/skalarly/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/authorize.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nexport class AuthGuard {\n  constructor(authService, router, snackBar) {\n    _defineProperty(this, \"authService\", void 0);\n    _defineProperty(this, \"router\", void 0);\n    _defineProperty(this, \"snackBar\", void 0);\n    this.authService = authService;\n    this.router = router;\n    this.snackBar = snackBar;\n  }\n  canActivate() {\n    const isAuth = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n      if (window.location.href !== 'https://www.skalarly.com/login') {\n        const snackBarRef = this.snackBar.open('Skalarly requries an account to access', \"Create an account to see what you'r missing\", {\n          duration: 3000\n        });\n        snackBarRef.onAction().subscribe(() => {\n          this.router.navigate(['/sign-up']);\n        });\n      }\n    }\n    return isAuth;\n  }\n}\n_class = AuthGuard;\n_defineProperty(AuthGuard, \"\\u0275fac\", function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthorizeService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.MatSnackBar));\n});\n_defineProperty(AuthGuard, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n}));","map":{"version":3,"names":["AuthGuard","constructor","authService","router","snackBar","_defineProperty","canActivate","isAuth","getIsAuth","navigate","window","location","href","snackBarRef","open","duration","onAction","subscribe","i0","ɵɵinject","i1","AuthorizeService","i2","Router","i3","MatSnackBar","factory","ɵfac"],"sources":["/Users/chaseolsen/skalarly-MVP/skalarly/src/app/app-routes/route-guards/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthorizeService } from 'src/app/services/authorize.service';\n\n@Injectable()\nexport class AuthGuard {\n  constructor(\n    private authService: AuthorizeService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {}\n  canActivate(): boolean {\n    const isAuth: boolean = this.authService.getIsAuth();\n    if (!isAuth) {\n      this.router.navigate(['/login']);\n      if (window.location.href !== 'https://www.skalarly.com/login') {\n        const snackBarRef = this.snackBar.open(\n          'Skalarly requries an account to access',\n          \"Create an account to see what you'r missing\",\n          {\n            duration: 3000,\n          }\n        );\n        snackBarRef.onAction().subscribe(() => {\n          this.router.navigate(['/sign-up']);\n        });\n      }\n    }\n    return isAuth;\n  }\n}\n"],"mappings":";;;;;;AAMA,OAAM,MAAOA,SAAS;EACpBC,YACUC,WAA6B,EAC7BC,MAAc,EACdC,QAAqB;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAFrB,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,QAAQ,GAARA,QAAQ;EACf;EACHE,WAAWA,CAAA;IACT,MAAMC,MAAM,GAAY,IAAI,CAACL,WAAW,CAACM,SAAS,EAAE;IACpD,IAAI,CAACD,MAAM,EAAE;MACX,IAAI,CAACJ,MAAM,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,IAAIC,MAAM,CAACC,QAAQ,CAACC,IAAI,KAAK,gCAAgC,EAAE;QAC7D,MAAMC,WAAW,GAAG,IAAI,CAACT,QAAQ,CAACU,IAAI,CACpC,wCAAwC,EACxC,6CAA6C,EAC7C;UACEC,QAAQ,EAAE;SACX,CACF;QACDF,WAAW,CAACG,QAAQ,EAAE,CAACC,SAAS,CAAC,MAAK;UACpC,IAAI,CAACd,MAAM,CAACM,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,CAAC;;;IAGN,OAAOF,MAAM;EACf;;SAxBWP,SAAS;AAAAK,eAAA,CAATL,SAAS,e;mBAATA,MAAS,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,WAAA;AAAA;AAAApB,eAAA,CAATL,SAAS,gB;SAATA,MAAS;EAAA0B,OAAA,EAAT1B,MAAS,CAAA2B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}