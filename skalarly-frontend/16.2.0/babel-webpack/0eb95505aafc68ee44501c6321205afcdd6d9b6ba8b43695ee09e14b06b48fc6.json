{"ast":null,"code":"import _defineProperty from \"/Users/chaseolsen/skalarly-MVP/skalarly/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/editing.service\";\nimport * as i2 from \"@angular/router\";\nexport class ConfirmGuard {\n  constructor(editingService, aRoute) {\n    _defineProperty(this, \"rootSub$\", void 0);\n    _defineProperty(this, \"editingService\", void 0);\n    _defineProperty(this, \"aRoute\", void 0);\n    _defineProperty(this, \"routeTitle\", void 0);\n    this.editingService = editingService;\n    this.aRoute = aRoute;\n  }\n  canDeactivate() {\n    this.rootSub$ = this.aRoute.title.subscribe(title => {\n      console.log('title', title);\n      this.routeTitle = title;\n      console.log('title of', typeof this.rootSub$);\n    });\n    try {\n      // If leaving edit profile page\n      if (this.routeTitle === 'edit-profile') {\n        const isSaved = this.editingService.getIsSaved();\n        if (!isSaved) {\n          const result = window.confirm('Do you want to save your changes?');\n          if (result) {\n            // send data to service to make the change and then continue navigation\n            this.editingService.saveEditingProfile();\n            return true;\n          } else {\n            // continue navigation without saving\n            return true;\n          }\n        } else {\n          // already saved\n          return true;\n        }\n      }\n      // If leaving single feed page\n      if (this.routeTitle === 'single-feed') {\n        // have dialog pop up with nav options,\n        // sign up...\n        // must return true once one of these options are chosen\n        // so need to track those events\n        return false;\n      }\n    } catch {\n      // have this a error pop up\n      console.log('bad connnection!!');\n    } finally {\n      // Perform cleanup or other necessary actions here\n    }\n    return true;\n  }\n  ngOnDestroy() {\n    // clean up subscription\n    this.rootSub$?.unsubscribe();\n  }\n}\n_class = ConfirmGuard;\n_defineProperty(ConfirmGuard, \"\\u0275fac\", function ConfirmGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.EditingService), i0.ɵɵinject(i2.ActivatedRoute));\n});\n_defineProperty(ConfirmGuard, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n}));","map":{"version":3,"names":["ConfirmGuard","constructor","editingService","aRoute","_defineProperty","canDeactivate","rootSub$","title","subscribe","console","log","routeTitle","isSaved","getIsSaved","result","window","confirm","saveEditingProfile","ngOnDestroy","unsubscribe","i0","ɵɵinject","i1","EditingService","i2","ActivatedRoute","factory","ɵfac"],"sources":["/Users/chaseolsen/skalarly-MVP/skalarly/src/app/app-routes/route-guards/confirm.guard.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EditingService } from 'src/app/services/editing.service';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\n@Injectable()\nexport class ConfirmGuard implements OnDestroy {\n  private rootSub$: Subscription | undefined;\n  private editingService: EditingService;\n  private aRoute: ActivatedRoute;\n  routeTitle: string | undefined;\n\n  constructor(editingService: EditingService, aRoute: ActivatedRoute) {\n    this.editingService = editingService;\n    this.aRoute = aRoute;\n  }\n  canDeactivate(): boolean {\n    this.rootSub$ = this.aRoute.title.subscribe((title: string | undefined) => {\n      console.log('title', title);\n\n      this.routeTitle = title;\n      console.log('title of', typeof this.rootSub$);\n    });\n    try {\n      // If leaving edit profile page\n      if (this.routeTitle === 'edit-profile') {\n        const isSaved: boolean = this.editingService.getIsSaved();\n        if (!isSaved) {\n          const result: boolean = window.confirm(\n            'Do you want to save your changes?'\n          );\n          if (result) {\n            // send data to service to make the change and then continue navigation\n            this.editingService.saveEditingProfile();\n            return true;\n          } else {\n            // continue navigation without saving\n            return true;\n          }\n        } else {\n          // already saved\n          return true;\n        }\n      }\n\n      // If leaving single feed page\n      if (this.routeTitle === 'single-feed') {\n        // have dialog pop up with nav options,\n        // sign up...\n        // must return true once one of these options are chosen\n        // so need to track those events\n        return false;\n      }\n    } catch {\n      // have this a error pop up\n      console.log('bad connnection!!');\n    } finally {\n      // Perform cleanup or other necessary actions here\n    }\n    return true;\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscription\n    this.rootSub$?.unsubscribe();\n  }\n}\n"],"mappings":";;;;;AAMA,OAAM,MAAOA,YAAY;EAMvBC,YAAYC,cAA8B,EAAEC,MAAsB;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAChE,IAAI,CAACF,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EACAE,aAAaA,CAAA;IACX,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,MAAM,CAACI,KAAK,CAACC,SAAS,CAAED,KAAyB,IAAI;MACxEE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAAC;MAE3B,IAAI,CAACI,UAAU,GAAGJ,KAAK;MACvBE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,OAAO,IAAI,CAACJ,QAAQ,CAAC;IAC/C,CAAC,CAAC;IACF,IAAI;MACF;MACA,IAAI,IAAI,CAACK,UAAU,KAAK,cAAc,EAAE;QACtC,MAAMC,OAAO,GAAY,IAAI,CAACV,cAAc,CAACW,UAAU,EAAE;QACzD,IAAI,CAACD,OAAO,EAAE;UACZ,MAAME,MAAM,GAAYC,MAAM,CAACC,OAAO,CACpC,mCAAmC,CACpC;UACD,IAAIF,MAAM,EAAE;YACV;YACA,IAAI,CAACZ,cAAc,CAACe,kBAAkB,EAAE;YACxC,OAAO,IAAI;WACZ,MAAM;YACL;YACA,OAAO,IAAI;;SAEd,MAAM;UACL;UACA,OAAO,IAAI;;;MAIf;MACA,IAAI,IAAI,CAACN,UAAU,KAAK,aAAa,EAAE;QACrC;QACA;QACA;QACA;QACA,OAAO,KAAK;;KAEf,CAAC,MAAM;MACN;MACAF,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;KACjC,SAAS;MACR;IAAA;IAEF,OAAO,IAAI;EACb;EAEAQ,WAAWA,CAAA;IACT;IACA,IAAI,CAACZ,QAAQ,EAAEa,WAAW,EAAE;EAC9B;;SA3DWnB,YAAY;AAAAI,eAAA,CAAZJ,YAAY,e;mBAAZA,MAAY,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAAArB,eAAA,CAAZJ,YAAY,gB;SAAZA,MAAY;EAAA0B,OAAA,EAAZ1B,MAAY,CAAA2B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}