/* You can add global styles to this file, and also import other style files */
@use 'app/universal-reusable-styles/break-points' as device;
@use 'app/universal-reusable-styles/common' as universal;
@import '~@angular/material/prebuilt-themes/indigo-pink.css';

// universal font
$skalarly-font: 'Cormorant Garamond', serif;

$toolbar-shadow-color: rgba(0, 0, 0, 0.25);
$toolbar-background-color: #282828;
b {
// for matching search results to an api call list
// displays light blue for `<b>${match}</b>` bold.pipe implementation
color: lightblue
}
body {
 @include universal.common;
 @include universal.pageSize;
 input, textarea, button {
    font-family: $skalarly-font;
 }
 @each $screen, $size in device.$font-sizes {
    @if (map-has-key(device.$device-sizes, $screen)) {
      @include device.fontAdjustments($size);
    }
  }
  
}
.condition-met{
    color: #228B22;
}
mat-hint{
    color: grey;
}
mat-toolbar{
    box-shadow: 0px 2px 5px 0px $toolbar-shadow-color;
    background-color: $toolbar-background-color;
}
@each $screen, $size in device.$font-sizes {
  @if (map-has-key(device.$device-sizes, $screen)) {
$shadow-size: $size;
$shadow-size2: cal($shadow-size + device.$font-sub-sizes) ;
  }
}
// global mat form field animation
// Mixin for shared sparkle styles
@mixin sparkle($position, $offsetX, $offsetY, $delay) {
  content: '';
  position: absolute;
  width: 5px; // size of the dots
  height: 5px; // size of the dots
  border-radius: 50%; // make them round
  background-color: yellowgreen; // Color of the dots
  opacity: 0; // start fully transparent
  animation: sparkle 1.5s ease-in-out infinite;
  animation-delay: $delay;

  // Position the sparkle dots based on arguments
  #{$position}: -10px;
  #{$offsetX}: 10px;
}

.glow-animation::before {
  @include sparkle(top, left, 0s); // Use mixin with specific position and delay
}

.glow-animation::after {
  @include sparkle(bottom, right, 0.75s); // Use mixin with specific position and delay
}

.glow-animation {
  position: relative; // Needed for absolute positioning of pseudo-elements
  animation: glow 2.5s ease-in-out infinite;
}

@keyframes sparkle {
  0%, 100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 $shadow-size, calc($shadow-size * 2) pink;
  }
  50% {
    box-shadow: 0 0 $shadow-size2, calc($shadow-size2 * 3) pink;
  }
}

  
  .error-animation {
    animation: error-glow 2.5s ease-in-out infinite, sparkle 1.5s ease-in-out;
  
    @keyframes error-glow {
      0%, 100% {
        box-shadow: 0 0 $shadow-size var(--mdc-outlined-text-field-error-outline-color);
      }
      50% {
        box-shadow: 0 $shadow-size2 $shadow-size2 var(--mdc-outlined-text-field-error-outline-color)
      }
    }
  }
  
  

.material-symbols-outlined {
  font-variation-settings:
  'FILL' 0,
  'wght' 100,
  'GRAD' 0,
  'opsz' 24
}
router-outlet[content] {
    flex: 1; // allow the content area to expand and fill available space 
@media (orientation: portrait) {
  padding-bottom: 4em; // adjust this value to match the footer's height in app scss 
  box-sizing: border-box; // include padding in the content's height calculation 
}
}
// mat form field 
@keyframes sparkle {
    0%, 100% {
      opacity: 1;
    }
    25% {
      opacity: 0.7;
    }
    50% {
      opacity: 1;
    }
    75% {
      opacity: 0.7;
    }
  };