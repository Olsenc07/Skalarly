/* You can add global styles to this file, and also import other style files */
@use 'app/assistant-level-code/universal-reusable-styles/break-points' as device;
@use 'app/assistant-level-code/universal-reusable-styles/common' as universal;
@use 'app/assistant-level-code/universal-reusable-styles/responsive-mixin' as responsive;
@import '~@angular/material/prebuilt-themes/indigo-pink.css';

// universal font
:root{
--skalarly-font: 'Cormorant Garamond', serif;
}
$toolbar-shadow-color: rgba(0, 0, 0, 0.25);
$toolbar-background-color: #282828;
*,
*::before,
*::after {
  box-sizing: border-box;
}
b {
// for matching search results to an api call list
// displays light blue for `<b>${match}</b>` bold.pipe implementation
color: lightblue
}
body {
  // better to implement specific cases. This is to confusing
  // @include responsive.responsiveFontSize;
  font-family: var(--skalarly-font);
  margin: 0;
  padding: 0;
  background-image: linear-gradient(whitesmoke,white);
  @include universal.common;
  @include universal.pageSize;
 }
 button{
  // google standard for mobile buttons
  min-height: 48px; 
  font-family: var(--skalarly-font);
 }
.condition-met{
    color: #228B22;
}
mat-hint{
    color: grey;
}
mat-toolbar{
    box-shadow: 0px 2px 5px 0px $toolbar-shadow-color;
    background-color: $toolbar-background-color;
}

// currently not working

// global mat form field animation
// Mixin for shared sparkle styles
// @mixin generate-firework-dots($count) {
//   @for $i from 1 through $count {
//     // Each dot will have a unique class
//     &.dot-#{$i}::before {
//       content: '';
//       position: absolute;
//       border-radius: 50%;
//       background-color: yellowgreen;
//       width: 5px;
//       height: 5px;
//       opacity: 0;
//       // Randomize the start position of the dot
//       $random-top: random(100) * 50%;
//       $random-left: random(100) * 1%;
//       top: $random-top;
//       left: $random-left;
//       // Each dot will have a different animation delay
//       $random-delay: random(2000) * 1ms;
//       animation: firework-animation 2s ease-in-out $random-delay infinite;
//     }
//   }
// }

.glow-animation {
  animation: glow 2.5s ease-in-out infinite;
  overflow: visible;
  @keyframes glow {
    0%, 100% {
      box-shadow: 0 0 var(--font-size-smaller) var(--mdc-outlined-text-field-outline-color);
    }
    50% {
      box-shadow: 0 0 var(--font-sub-size) var(--mdc-outlined-text-field-outline-color);
    }
  }
}
  .error-animation {
    animation: error-glow 2.5s ease-in-out infinite;
    overflow: visible;
    @keyframes error-glow {
      0%, 100% {
        box-shadow: 0 0 var(--font-size-smaller) var(--mdc-outlined-text-field-error-outline-color);
      }
      50% {
        box-shadow: 0 0 var(--font-sub-size) var(--mdc-outlined-text-field-error-outline-color)
      }
    }
  }
  
  

.material-symbols-outlined {
  font-variation-settings:
  'FILL' 0,
  'wght' 100,
  'GRAD' 0,
  'opsz' 24
}
router-outlet[content] {
    flex: 1; // allow the content area to expand and fill available space 
@media (orientation: portrait) {
  padding-bottom: 4em; // adjust this value to match the footer's height in app scss 
  box-sizing: border-box; // include padding in the content's height calculation 
}
}
