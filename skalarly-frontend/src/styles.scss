/* You can add global styles to this file, and also import other style files */
@use 'app/universal-reusable-styles/break-points' as device;
@use 'app/universal-reusable-styles/common' as universal;
@import '~@angular/material/prebuilt-themes/indigo-pink.css';

// universal font
$skalarly-font: 'Cormorant Garamond', serif;

$toolbar-shadow-color: rgba(0, 0, 0, 0.25);
$toolbar-background-color: #282828;
// form field animation focus
$initialColor: #FF5733; 
$finalColor: #4A90E2; 
b {
// for matching search results to an api call list
// displays light blue for `<b>${match}</b>` bold.pipe implementation
color: lightblue
}
body {
 @include device.fontAdjustments(map-get(device.$font-sizes, base));
 @include universal.common;
 @include universal.pageSize;
 input, textarea, button {
    font-family: $skalarly-font;
 }
 @each $screen, $size in device.$font-sizes {
    @if (map-has-key(device.$device-sizes, $screen)) {
      $min-width: map-get(device.$device-sizes, $screen);
      @media only screen and (min-width: #{$min-width}) {
        @include device.fontAdjustments($size);
      }
    }
  }
  
}
.condition-met{
    color: #228B22;
}
img, video {
    width: universal.$all;
    height: auto;
}
mat-hint{
    color: grey;
}
mat-toolbar{
    box-shadow: 0px 2px 5px 0px $toolbar-shadow-color;
    background-color: $toolbar-background-color;
}
mat-form-field {
    position: relative;
    transition: all 0.3s ease; /* Smooth transition for all styles */
  }
  
  mat-form-field:focus-within::before {
    position: absolute;
    width: 100%;
    height: 2px;
    background: linear-gradient(to right, #FF5733, #4A90E2); /* Set your color gradient here */
    animation: magicGlow 7s infinite alternate;
  }
  
  @keyframes magicGlow {
    0% {
      transform: scaleX(1);
    }
    100% {
      transform: scaleX(1.2);
      opacity: 0;
    }
  }
  
.material-symbols-outlined {
  font-variation-settings:
  'FILL' 0,
  'wght' 100,
  'GRAD' 0,
  'opsz' 24
}
router-outlet[content] {
    flex: 1; // allow the content area to expand and fill available space 
@media (orientation: portrait) {
  padding-bottom: 4em; // adjust this value to match the footer's height in app scss 
  box-sizing: border-box; // include padding in the content's height calculation 
}
}