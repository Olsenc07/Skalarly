@use '../universal-reusable-styles/common' as universal;
@use '../universal-reusable-styles/break-points' as device;
@use '../universal-reusable-styles/responsive-mixin' as responsive;
$input-margin: 3%; 
$form-margins: (
  base: 0%,     
  tablet: 5%,  
  laptop: 10%,   
  desktop: 15%,  
  tv: 20%        
);
@mixin responsiveMargins {
  // Mobile First
  --margin-form: #{map-get($form-margins, 'base')};
  margin: 0% var(--margin-form);
  @each $screen, $min-width in device.$device-sizes {
    @if $screen != 'base' {
      @include responsive.media-query($screen, $min-width){
      // Use built media query string
        margin: 0% #{map-get($form-margins, $screen)};
      }}}
}
@mixin pseudo-mat-form-field {
  background: rgb(239,241,246) no-repeat;
  height: 56px;
  margin-bottom: 8px;
  border-radius: 4px;
  width: 100%;
}
// skeletons
.input-boxes-skeleton{
  @include universal.common(flex, column);
  margin: 0% 2%;
  width: 100%;
   //  if greater then 576px width
   @media only screen and (min-width: map-get(device.$device-sizes, 'tablet')) {
   @include universal.common(flex, row);
  }
}
  .skeleton-wrap{
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  .input-skeleton[one]{ // Apply the mixin to the first and third child which are supposed to mimic the mat form field
        @include pseudo-mat-form-field;
          margin-right: $input-margin; // Specific margin for the first child
        }
  .input-skeleton[two]{
      @include pseudo-mat-form-field;
          margin-left: $input-margin; // Specific margin for the third child
        }
      ngx-skeleton-loader[stayIn]{
          width: 50%;
          align-self: flex-start;
        }
      ngx-skeleton-loader[forgot] {
          width: 50%;
          align-self: flex-end;
        }
      ngx-skeleton-loader[circle]{
        align-self: center;
      }
      .input-skeleton-join{
        align-self: center;
        height: 36px;
        border-radius: 4px;
        width: 100%;
        min-width: 64px;
        max-width: 164px;
        background: rgb(239,241,246) no-repeat;
      }
// logo and top of login screen
.login-header {
    text-align: center; // Center-align text
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0;
//     div[logo]{
// width: 100%;
// height: auto;
//  img {
//   max-width: 100%; /* Ensures the image can scale down */
//   max-height: 30vh; /* Scales based on the viewport height */
//   height: auto; /* Maintains the aspect ratio of the image */
// }
//     }

}
  button[join] {
    @include responsive.responsiveFontSize;
      margin: 1% 0%;
      background-image: linear-gradient(to right,#002D62,#778899);
      color: white;
      font-family: 'Cormorant Garamond', serif;
    
      // add ons
      animation: float 3s ease-in-out infinite;
      position: relative;
      overflow: hidden;
      transition: background-color 0.5s, transform 0.3s, box-shadow 0.3s;
  }
  button[forgot]{
    @include responsive.responsiveFontSizeSmaller;
    align-items: center;
    background: none;
    border: none;
    color: #0073e6;
    
    cursor: pointer;
    display: flex;
    justify-content: flex-end;
    text-decoration: underline;

  
  }
  button[join] {
    // ... other styles ...
    position: relative;
    overflow: hidden;
    transition: background-color 0.5s, transform 0.3s, box-shadow 0.3s;
  
    // Magic glow effect
    &:before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle, rgba(255, 255, 255, 0.5), transparent);
      opacity: 0;
      transition: opacity 0.3s;
    }
  
    // Hover state
    &:hover:before {
      opacity: 1;
    }
  
    // Active/Tap state
    &:active {
      background-color: darken(#4a148c, 10%); // Darken the button color when clicked
    }
  }
  
  // Keyframes for floating effect
  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }
    
  // Keyframes for the sparkle trail
  @keyframes sparkles {
    0% {
      opacity: 0;
      transform: translate3d(var(--sparkle-x, 0), var(--sparkle-y, 0), 0);
    }
    100% {
      opacity: 1;
      transform: translate3d(var(--sparkle-x, 0), var(--sparkle-y, 0), 0);
    }
  }
  
  // Sparkle on hover
  button[join]:hover:after {
    content: '\2728'; // Unicode character for sparkle
    position: absolute;
    top: 50%;
    left: 50%;
    animation: sparkles 1s forwards;
    --sparkle-x: 10px;
    --sparkle-y: -20px;
  }
  
  form {
    @include responsiveMargins;
    @include universal.common;
    position: relative;
  }
  // welcome text animations
  .welcome-text {
    display: flex;
    @include responsive.responsiveFontSizeLarger;
    justify-content: center;
    white-space: nowrap; // Prevent letters from wrapping to a new line
    span {
      opacity: 0; // Start with the letter hidden
    }
    @for $i from 1 through 18 { // Adjust the loop count based on the number of letters
      $animation-delay: $i * 0.15s; 
      $animation-duration: 0.25s; // Duration for each letter
      span:nth-child(#{$i}) {
        animation: glow-animation #{$animation-duration} #{$animation-delay} forwards;
        background: linear-gradient(45deg, #a55eea, #4d9ef6);
        background-clip: text;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        transition: background 0.3s, color 0.3s;
      }
    }
  }
 
  @keyframes glow-animation {
    from {
      opacity: 0;
      transform: translateX(-100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
// *1 *2
div[column] {
  display: flex;
  flex-direction: column;
  padding: 3% 1% 0% 1%;

  &:first-of-type {
    mat-form-field {
      justify-content: flex-start;
    }
  }
  &:not(:first-of-type) 
    mat-form-field{
    justify-content: flex-end;
  }
}
.dot-pulse {
    display: inline-block;
    position: relative;
    top: 0;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: grey;
    animation: dotPulse 1s 180s;
}
      .dot-pulse:nth-child(2) {
        animation-delay: 0.5s;
      }
      
      .dot-pulse:nth-child(3) {
        animation-delay: 1s;
      }
      @keyframes dotPulse {
        0%, 80%, 100% {
          transform: scale(0);
        }
        40% {
          transform: scale(1);
        }
      }
.mat-mdc-checkbox{ 
    display: flex;
  }
  span[inputs] {
  @include universal.common(flex, column);
  @media only screen and (min-width: map-get(device.$device-sizes, 'tablet')) {
   @include universal.common(flex, row);
  }}
  span[matPrefix] { 
    margin-left: 15%;
  }
.login-options {
  display: flex;
  align-items: center;
  text-align: center;
       }
.failed-login-animation {
        animation-name: shake; 
        animation-duration: 0.5s; 
        animation-timing-function: ease-in-out;
      }

// approved login
/* Define a CSS class for the glowing and scaling animation */
.glowing-text {
  animation: glow .5s, scale .5s;
}
/* Keyframes for the glow animation */
@keyframes glow {
  from {
    color: green;
    transform: scale(1);
  }
  to {
    color: green;
    text-shadow: 0 0 5px #00ff00, 0 0 10px #00ff00, 0 0 15px #00ff00;
    transform: scale(1.7);
  }
}
    div[loginButton]{
      display: inline-flex;
      justify-content: center;
      align-items: center;
      @include responsive.responsiveFontSize
    }
    div[skalarly] {
      @include responsive.responsiveFontSizeLarger; 
      background-clip: text;
      -webkit-background-clip: text;
      color: transparent; 
      background-image: linear-gradient(45deg, #0073e6, #bdc3c7, #0073e6, #0073e6, #bdc3c7, #0073e6);
      background-size: 200% 200%; // Extends the background to allow for the "flow" effect
      animation: gradient-flow 6s linear infinite; // Adjust the time as needed
    }
    @keyframes gradient-flow {
      0%, 100% {
        background-position: 0% 50%;
      }
      50% {
        background-position: -100% -10%;
      }
    }
h2 {
  margin: 1% 0%;
  color: #bdc3c7;
  @include responsive.responsiveFontSize; 
} 
  // animations keyframes
  @keyframes shake {
    0%, 100% {
      transform: translateX(0);
    }
    25%, 75% {
      transform: translateX(-5px); /* Adjust the horizontal shake distance */
    }
    50% {
      transform: translateX(5px); /* Adjust the horizontal shake distance */
    }
  }
      @keyframes fadeOut {
        0% {
          opacity: 1;
          white-space: nowrap;
        }
        25% {
          opacity: 0.75;
        }
        100% {
          opacity: 0;
        }
      }
      .input-boxes{
        display: flex;
        justify-content: center;
        border-right: 15px solid transparent;
        border-bottom: 15px solid transparent;    
        border-image: linear-gradient(135deg, rgba(255, 255, 255, 0), rgba(102, 178, 255, 0.3), rgba(0, 86, 179, 0.7)) 1 stretch;
        padding-bottom: 1%;
        margin: 0% 1% 1%;
        overflow: hidden; 
     
          &:first-of-type {
            mat-checkbox {
            margin-left: $input-margin; 

            }
          }
          &:last-of-type{
            button[forgot] {
            margin-right: $input-margin; 

          }
        }
        div {
          width: 100%;
        }
      }
      // /major animation
      .join-button {
        // Initial styles for your button
        // It should be invisible and scaled to 0 width
        transform: scaleX(0);
        transform-origin: left;
        display: inline-block;
        white-space: nowrap;
        position: absolute;
        bottom: 0; // Align with the bottom of the text
        left: 0; // Align with the left of the text
        // ...
      }
      .welcome-container {
        display: flex;
        flex-direction: column;
        justify-content: center; 
        align-items: center; 
      }