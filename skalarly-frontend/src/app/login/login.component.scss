@use '../universal-reusable-styles/common' as universal;
@use '../universal-reusable-styles/break-points' as device;
$input-margin: 3%; 
// based on device breakpoints
// forms width 
$form-margins: (
  base: 0%,     
  tablet: 5%,  
  laptop: 10%,   
  desktop: 20%,  
  tv: 30%        
);

// logo and top of login screen
.login-header {
  text-align: center; // Center-align text
  figure {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
}
// reusable stlyles for main screen login box
@mixin common-styles($font-size, $chip-size, $font-sub-size, $form-margin) {
  button {
    font-size: calc(#{$font-size} + #{$chip-size});
    &[btn] {
      background-image: linear-gradient(to right,#002D62,#778899);
      color: white;
      font-size: calc(#{$font-size} - #{$chip-size});
    }
  }

  button[forgot] {
    align-items: center;
    background: none;
    border: none;
    color: #0073e6;
    cursor: pointer;
    display: flex;
    justify-content: flex-end;
    font-size: calc(#{$font-size} - #{$font-sub-size});
    text-decoration: underline;
  }

  form {
    margin: 0% $form-margin;
    @include universal.common;
    background-image: linear-gradient(whitesmoke, white);
  }

  .welcome-text {
    font-size: $font-size;
    color: #0073e6;
    white-space: nowrap; // Prevent letters from wrapping to a new line
  
    $animation-delay: 0;
    $animation-duration: 0.5s;
  
    @for $i from 1 through 3 {
      $animation-delay: $animation-delay + 0.3s; // Adjust the delay as needed
      $animation-duration: $animation-duration + 0.3s; // Adjust the duration as needed
  
      &:nth-of-type(#{$i}) {
        animation: glow-animation #{$animation-duration} ease-in-out #{$animation-delay} forwards;
      }
    }
  }
  
  @keyframes glow-animation {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
}
// *1 *2
body {
  background-image: linear-gradient(whitesmoke,white);
}
div[loginButton]{
  display: flex;
  justify-content: center;
  width: 100%;
}
div[column] {
  display: flex;
  flex-direction: column;
  &:first-of-type {
    mat-form-field {
      justify-content: flex-start;
    }
  }
  &:not(:first-of-type) 
  mat-form-field {
    justify-content: flex-end;
  }
}
.dot-pulse {
        display: inline-block;
        position: relative;
        top: 0;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background-color: grey;
        animation: dotPulse 1s infinite;
}
      .dot-pulse:nth-child(2) {
        animation-delay: 0.5s;
      }
      
      .dot-pulse:nth-child(3) {
        animation-delay: 1s;
      }
      @keyframes dotPulse {
        0%, 80%, 100% {
          transform: scale(0);
        }
        40% {
          transform: scale(1);
        }
      }
.mat-mdc-checkbox{
    display: flex;
  }
.login-options {
  display: flex;
  align-items: center;
  text-align: center;
       }
.failed-login-animation {
        animation-name: shake; 
        animation-duration: 0.5s; 
        animation-timing-function: ease-in-out;
      }

// approved login
/* Define a CSS class for the glowing and scaling animation */
.glowing-text {
  animation: glow .5s, scale .5s;
}

/* Keyframes for the glow animation */
@keyframes glow {
  from {
    color: green;
    transform: scale(1);
  }
  to {
    color: green;
    text-shadow: 0 0 5px #00ff00, 0 0 10px #00ff00, 0 0 15px #00ff00;
    transform: scale(1.7);
  }
}

// scaling
  @each $screen, $min-width in device.$device-sizes {
    $font-size: map-get(device.$font-sizes, $screen);
    $font-sub-size: map-get(device.$font-sub-sizes, $screen);
    $chip-size: map-get(device.$chip-sizes, $screen);
    $form-margin: map-get($form-margins, $screen);
  figcaption {
    font-size: $font-size; // Set font size for the logo
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent; 
    background: linear-gradient(to right, #0073e6, #ffffff);
  }


h2 {
  font-size: calc(#{$font-size} + #{$font-sub-size}); 
}
  // mobile first
   @if $screen == 'mobile' {
      @include common-styles($font-size, $chip-size, $font-sub-size, $form-margin);
      }
    @media (min-width: #{$min-width}) {
      @include common-styles($font-size, $chip-size, $font-sub-size, $form-margin);
    }
}
    .input-boxes{
    margin: 0% 2%;
     @include universal.common(flex, column);
    //  if grater then 576px width
    @media only screen and (min-width: 576px) {
     @include universal.common(flex, row);
     mat-form-field {
      &:first-child {
        margin-right: $input-margin; 
      }
      &:last-child {
        margin-left: $input-margin; 
      }
    }}
  }

    span[matPrefix] { 
      margin-left: 15%;
    }
  
  // animations keyframes
  @keyframes shake {
    0%, 100% {
      transform: translateX(0);
    }
    25%, 75% {
      transform: translateX(-5px); /* Adjust the horizontal shake distance */
    }
    50% {
      transform: translateX(5px); /* Adjust the horizontal shake distance */
    }
  }
      @keyframes fadeOut {
        0% {
          opacity: 1;
          white-space: nowrap;
        }
        25% {
          opacity: 0.75;
        }
        100% {
          opacity: 0;
        }
      }
    

      




