$all: 100%;
@mixin common($flex: flex, $portrait: column){
    display: $flex;
    justify-content: center;
    flex-direction: $portrait;
}
@mixin pageSize{
    width: $all;
    box-sizing: border-box;
}
$color-pairs: (
  'oceanic-blue': (
    primary: rgba(72, 107, 131, 1), /* Oceanic Blue */
    pairing: rgba(0, 95, 115, 1)    /* Deep Sea Blue */
  ),
  'atlantic-blue': (
    primary: rgba(90, 125, 154, 1), /* Atlantic Blue */
    pairing: rgba(148, 201, 169, 1)  /* Teal Blue */
  ),
  'sapphire-blue': (
    primary: rgba(30, 67, 121, 1), /* Sapphire Blue */
    pairing: rgba(72, 107, 131, 1)  /* Oceanic Blue */
  )
);


@function random-color-pair() {
  $keys: map-keys($color-pairs);
  $random-key: nth($keys, random(length($keys)));
  $color-pair: map-get($color-pairs, $random-key);
  @return $color-pair;
}
$random-pair: random-color-pair();
$firstChoice: map-get($random-pair, primary);
$secondChoice: map-get($random-pair, pairing);
:root {
  --firstChoice: #{$firstChoice};
  --secondChoice: #{$secondChoice};
  --error: rgba(220, 20, 60, 0.5); /* Crimson Flame */
  --approved: hwb(51 0% 0%); 
  --pairingColor: #486b83; /* Oceanic Blue */
  --pairingColor2: #778da9; /* Dusty Blue */
}

@function generateGradient() {
  /* Accessing CSS variables in SCSS */
  $firstChoice: var(--firstChoice);
  $secondChoice: var(--secondChoice);

  @return linear-gradient(45deg, $firstChoice, $secondChoice);
}
