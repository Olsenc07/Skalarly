// common requirements
$all: 100%;
@mixin common($flex: flex, $portrait: column){
    display: $flex;
    justify-content: center;
    flex-direction: $portrait;
}
@mixin pageSize{
    // maybe use min-height: 100vh;
    height: 100vh;
    width: $all;
    box-sizing: border-box;
}
// approval of something
@mixin approved { 
  animation: glow 1.5s ease forwards;
    @keyframes glow {
      from {
        color: 3CB371;
        transform: scale(1);
      }
      to {
        color: 3CB371;
        text-shadow: 0 0 5px #3CB371, 0 0 10px #3CB371, 0 0 15px #3CB371;
        transform: scale(1.7);
      }
    }
}
$color-pairs: (
  'mystic-turquoise': (
    primary: #287182, // Darker Mystic Turquoise
    pairing: #4f6d7a  // Steel Blue
  ),
  'celestial-blue': (
    primary: #3b5a91, // Darker Celestial Blue
    pairing: #5a7d9a  // Atlantic Blue
  ),
  'sapphire-blue': (
    primary: #1e4379, // Darker Sapphire Blue
    pairing: #486b83  // Oceanic Blue
  ),
  'shimmering-sky': (
    primary: #6ea4d4, // Darker Shimmering Sky
    pairing: #7fb7be  // Sky Reflection Blue
  ),
  'nebula-navy': (
    primary: #000080, // Nebula Navy
    pairing: #3c6997  // Nautical Blue
  ),
  'steel-blue': (
    primary: #4f6d7a, // Steel Blue
    pairing: #778da9  // Dusty Blue
  ),
  'atlantic-blue': (
    primary: #5a7d9a, // Atlantic Blue
    pairing: #94c9a9  // Teal Blue
  ),
  'oceanic-blue': (
    primary: #486b83, // Oceanic Blue
    pairing: #005f73  // Deep Sea Blue
  ),
  'dusty-blue': (
    primary: #778da9, // Dusty Blue
    pairing: #6ea4d4  // Darker Shimmering Sky
  ),
  'nautical-blue': (
    primary: #3c6997, // Nautical Blue
    pairing: #3b5a91  // Darker Celestial Blue
  ),
  'deep-sea-blue': (
    primary: #005f73, // Deep Sea Blue
    pairing: #287182  // Darker Mystic Turquoise
  ),
  'teal-blue': (
    primary: #94c9a9, // Teal Blue
    pairing: #1e4379  // Darker Sapphire Blue
  ),
  'sky-reflection-blue': (
    primary: #7fb7be, // Sky Reflection Blue
    pairing: #000080  // Nebula Navy
  )
);
@function random-color-pair() {
  $keys: map-keys($color-pairs);
  $random-key: nth($keys, random(length($keys)));
  $color-pair: map-get($color-pairs, $random-key);
  @return $color-pair;
}
$random-pair: random-color-pair();
$firstChoice: map-get($random-pair, primary);
$secondChoice: map-get($random-pair, pairing);
:root {
  --firstChoice: #{$firstChoice};
  --secondChoice: #{$secondChoice};
  --pairingColor: #486b83; // Oceanic Blue
  --pairingColor2: #778da9; // Dusty Blue
}

@function generateGradient() {
  // Accessing CSS variables in SCSS
  $firstChoice: var(--firstChoice);
  $secondChoice: var(--secondChoice);

  @return linear-gradient(45deg, $firstChoice, $secondChoice);
}
