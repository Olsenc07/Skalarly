@use 'login-animations.component' as animation;
@use '../../assistant-level-code/universal-reusable-styles/break-points' as device;
@use '../../assistant-level-code/universal-reusable-styles/responsive-mixin' as responsive;
@use '../../assistant-level-code/universal-reusable-styles/common' as universal;

$form-margins: (
  base: 3%,     
  tablet: 5%,  
  laptop: 10%,   
  desktop: 15%,  
  tv: 20%        
);
@mixin responsiveMargins {
  // Mobile First
  --margin-form: #{map-get($form-margins, 'base')};
  margin: 0% var(--margin-form);
  @each $screen, $min-width in device.$device-sizes {
    @if $screen != 'base' {
      @include responsive.media-query($screen, $min-width){
      // Use built media query string
        margin: 0% #{map-get($form-margins, $screen)};
      }}}
}
// logo and top of login screen
.login-header {
    text-align: center; 
    @include universal.common;
    align-items: center;
    margin: 0;
}
div[logo] img {
  max-width: 94.5px;
  max-height: 30vh;
  width: 100%;
  height: auto;
}
  button[join] {
    @include responsive.responsiveFontSize;
      margin: 1% 0%;
      position: relative; // Needed for absolute positioning of children
      overflow: hidden; // To handle any overflow issues
      background-image: linear-gradient(to right, #507dbc,#C0C0C0);
      transition: background-image 1.5s ease, transform 1.5s ease; 
      &.welcome-text-south-paw {
        background-image: linear-gradient(to right, white, ghostwhite);; 
        font-weight: 700;
        transform: scaleX(1);
        box-shadow: 3px 3px #93b9e6;
      }
      color: white;
      font-family: 'Cormorant Garamond', serif;
      // add ons
      @include animation.riseFloat;
      animation: float 4s ease-in-out;
      position: relative;
      overflow: hidden;
      transition: background-color 0.5s, transform 0.3s, box-shadow 0.3s;
    align-items: center;
    text-align: center;
      // Magic glow effect
      &:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: radial-gradient(circle, rgba(255, 255, 255, 0.5), transparent);
        opacity: 0;
        transition: opacity 0.3s;
      }
      // Hover state
      &:hover:before {
        opacity: 1;
      }
      // Active/Tap state
      &:active {
        background-color: darken(#9b72aa, 10%); 
      }
  }
 
  div[forgot]{
    display: flex;
    justify-content: flex-end;
    button[forgot]{
      align-items: center;
      background: none;
      border: none;
      font-style: italic;
      text-decoration: underline;
    }
  }
  
  // Sparkle on hover
  button[join]:hover:after {
    content: '\2728'; // Unicode character for sparkle
    position: absolute;
    top: 50%;
    left: 50%;
  }
  form {
    @include responsiveMargins;
    @include universal.common;
    position: relative;
    border: outset;
    background-color: ghostwhite;
  }

  .overlapping-skalarly {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none; /* Makes it non-interactive */
  }

// *1 *2
div[column] {
  @include universal.common;
  padding: 3% 1% 0% 1%;

  &:first-of-type {
    mat-form-field {
      justify-content: flex-start;
    }
  }
  &:not(:first-of-type) 
    mat-form-field{
    justify-content: flex-end;
  }
}
.dot-pulse {
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: grey;
  animation: dotPulse 1.5s infinite linear;
  
  &:nth-child(1), &:nth-child(4)  {
    animation-delay: 0s;
    background-color: var(--first);
  }
  &:nth-child(2), &:nth-child(5)  {
    animation-delay: 0.5s;
    background-color: var(--second);
  }
  &:nth-child(3) {
    animation-delay: 1s;
    background-color: var(--third);
  }
}

.mat-mdc-checkbox{ 
    display: flex;
  }
  span[inputs] {
  @include universal.common(flex, column);
  align-items: baseline;
  @media only screen and (min-width: map-get(device.$device-sizes, 'tablet')) {
   @include universal.common(flex, row);
  }}
  span[matPrefix] { 
    margin-left: 15%;
  }
.login-options {
  display: flex;
  align-items: center;
  text-align: center;
       }
.failed-login-animation {
      @include animation.shakeLogin;
      animation: shake; 
      animation-duration: 0.5s; 
      animation-timing-function: ease-in-out;
      }

// approved login
/* Define a CSS class for the glowing and scaling animation */
.glowing-text {
  @include animation.greenGlow;
  animation: glow .5s, scale .5s;
}
    div[loginButton]{
      display: inline-flex;
      justify-content: center;
      align-items: center;
      @include responsive.responsiveFontSize
    }
    div[skalarly] {
      @include responsive.responsiveFontSizeLarger; 
      background-clip: text;
      -webkit-background-clip: text;
      color: transparent; 
      // i want htis background to be added only onceprevis aniation is done
      $random-pair: universal.random-color-pair();
      $firstChoice: map-get($random-pair, primary);
      $secondChoice: map-get($random-pair, pairing);
      background-image: linear-gradient(45deg, #{$firstChoice}, #{$secondChoice}, #{$firstChoice}, #{$secondChoice}, #{$firstChoice}, #{$secondChoice});
      background-size: 200% 200%; // Extends the background to allow for the "flow" effect
      @include animation.gradientFlow;
      animation: gradient-flow 6s linear infinite; // Adjust the time as needed
    }
   
h2 {
  margin: 1% 0%;
  color: #bdc3c7;
  @include responsive.responsiveFontSize; 
}
      .input-boxes{
        display: flex;
        justify-content: center;
        border-right: 15px solid transparent;
        border-bottom: 15px solid transparent;    
        border-image: linear-gradient(135deg, rgba(255, 255, 255, 0), rgba(102, 178, 255, 0.3), rgba(0, 86, 179, 0.7)) 1 stretch;
        padding-bottom: 1%;
        margin: 1%;
        overflow: hidden; 
  
          &:first-of-type {
            mat-checkbox {
            margin-left: device.$input-margin; 

            }
          }
          &:last-of-type{
            button[forgot] {
            margin-right: device.$input-margin; 
          }
        }
        div {
          width: 100%;
        }
      }
      // /major animation
      .join-button {
        white-space: nowrap;
        position: absolute;
        bottom: 0; 
        left: 0; 
      }
      .welcome-container {
        @include universal.common;
        align-items: center; 
      }
// last animation and display feature
.flip-container {
  @include universal.common;
  align-items: center;
  min-height: 100vh;
  background: linear-gradient(135deg, #507dbc, #9b72aa);
  color: white;
  text-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
  @include animation.background;
  animation: backgroundAnimation 10s ease infinite;
  background-size: 200% 200%;
}
