@use '../../../assistant-level-code/universal-reusable-styles/break-points' as device;
@use '../../../assistant-level-code/universal-reusable-styles/common' as universal;

@mixin pseudo-mat-form-field {
  background: rgb(239,241,246) no-repeat;
  height: 56px;
  margin-bottom: 8px;
  border-radius: 4px;
  width: 100%;
}
div[wrapper]{
  padding: 0% 25%;
}
div{
  display: flex;
  flex-direction: column;
}
.input-boxes-skeleton{
    @include universal.common(flex, column);
    margin: 0% 2%;
     //  if greater then 576px width
     @media only screen and (min-width: map-get(device.$device-sizes, 'tablet')) {
     @include universal.common(flex, row);
    }
  }
    .skeleton-wrap {
      @include universal.common;
      width: 100%;
    }
    .input-skeleton[one]{ // Apply the mixin to the first and third child which are supposed to mimic the mat form field
          @include pseudo-mat-form-field;
            margin-right: device.$input-margin; // Specific margin for the first child
          }
    .input-skeleton[two]{
        @include pseudo-mat-form-field;
            margin-left: device.$input-margin; // Specific margin for the third child
          }
          %baseSkeletonLoader {
            width: 50%;
          }
          ngx-skeleton-loader[skalarly] {
            @extend %baseSkeletonLoader;
            margin: 0 auto;
          }
          ngx-skeleton-loader[stayIn],
          ngx-skeleton-loader[forgot] {
            @extend %baseSkeletonLoader;
            align-self: flex-start;
          }
          ngx-skeleton-loader[forgot] {
            align-self: flex-end;
          }
        ngx-skeleton-loader[circle]{
          align-self: center;
        }